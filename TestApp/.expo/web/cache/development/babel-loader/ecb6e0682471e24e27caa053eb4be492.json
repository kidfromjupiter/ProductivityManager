{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useDispatch } from \"react-redux\";\nimport { addReminder } from \"../redux/ReminderSlice\";\nvar PressableAnimated = Animated.createAnimatedComponent(Pressable);\n\nvar ActionButton = function ActionButton(_ref) {\n  var text = _ref.text,\n      icon = _ref.icon;\n  var dispatch = useDispatch();\n  var animatedScale = new Animated.Value(1);\n\n  var onTouchStart = function onTouchStart() {\n    Animated.spring(animatedScale, {\n      toValue: 0.9,\n      useNativeDriver: true,\n      speed: 30\n    }).start();\n  };\n\n  var onTouchEnd = function onTouchEnd() {\n    Animated.spring(animatedScale, {\n      toValue: 1,\n      useNativeDriver: true,\n      speed: 10\n    }).start();\n  };\n\n  var add = function add() {\n    console.log(\"Add reminder\");\n    var reminder = {\n      id: new Date().toJSON(),\n      title: \"Test\",\n      description: \"Test\",\n      completed: false\n    };\n    dispatch(addReminder(reminder));\n  };\n\n  var animatedScaleStyle = {\n    transform: [{\n      scale: animatedScale\n    }]\n  };\n  return React.createElement(PressableAnimated, {\n    style: [styles.actionbutton, animatedScaleStyle],\n    onPressIn: function onPressIn() {\n      onTouchStart();\n    },\n    onPressOut: function onPressOut() {\n      add();\n      onTouchEnd();\n    }\n  }, icon ? icon : React.createElement(AntDesign, {\n    name: \"plus\",\n    size: 30,\n    color: \"white\"\n  }));\n};\n\nvar styles = StyleSheet.create({\n  actionbutton: {\n    position: \"absolute\",\n    zIndex: 1000,\n    bottom: 20,\n    right: 20,\n    backgroundColor: \"#ffc484\",\n    width: 70,\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 40,\n    borderWidth: 1\n  }\n});\nexport default ActionButton;","map":{"version":3,"sources":["/home/lasan/Dev/React/TestApp/src/components/ActionButton.js"],"names":["React","AntDesign","useDispatch","addReminder","PressableAnimated","Animated","createAnimatedComponent","Pressable","ActionButton","text","icon","dispatch","animatedScale","Value","onTouchStart","spring","toValue","useNativeDriver","speed","start","onTouchEnd","add","console","log","reminder","id","Date","toJSON","title","description","completed","animatedScaleStyle","transform","scale","styles","actionbutton","StyleSheet","create","position","zIndex","bottom","right","backgroundColor","width","height","justifyContent","alignItems","borderRadius","borderWidth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT;AAEA,IAAMC,iBAAiB,GAAGC,QAAQ,CAACC,uBAAT,CAAiCC,SAAjC,CAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,aAAa,GAAG,IAAIP,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAtB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BT,IAAAA,QAAQ,CAACU,MAAT,CAAgBH,aAAhB,EAA+B;AAC9BI,MAAAA,OAAO,EAAE,GADqB;AAE9BC,MAAAA,eAAe,EAAE,IAFa;AAG9BC,MAAAA,KAAK,EAAE;AAHuB,KAA/B,EAIGC,KAJH;AAKA,GAND;;AAQA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxBf,IAAAA,QAAQ,CAACU,MAAT,CAAgBH,aAAhB,EAA+B;AAC9BI,MAAAA,OAAO,EAAE,CADqB;AAE9BC,MAAAA,eAAe,EAAE,IAFa;AAG9BC,MAAAA,KAAK,EAAE;AAHuB,KAA/B,EAIGC,KAJH;AAKA,GAND;;AAQA,MAAME,GAAG,GAAG,SAANA,GAAM,GAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAMC,QAAQ,GAAG;AAChBC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,MAAX,EADY;AAEhBC,MAAAA,KAAK,EAAE,MAFS;AAGhBC,MAAAA,WAAW,EAAE,MAHG;AAIhBC,MAAAA,SAAS,EAAE;AAJK,KAAjB;AAMAnB,IAAAA,QAAQ,CAACR,WAAW,CAACqB,QAAD,CAAZ,CAAR;AACA,GATD;;AAWA,MAAMO,kBAAkB,GAAG;AAC1BC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAErB;AAAT,KAAD;AADe,GAA3B;AAIA,SACC,oBAAC,iBAAD;AACC,IAAA,KAAK,EAAE,CAACsB,MAAM,CAACC,YAAR,EAAsBJ,kBAAtB,CADR;AAEC,IAAA,SAAS,EAAE,qBAAM;AAChBjB,MAAAA,YAAY;AACZ,KAJF;AAKC,IAAA,UAAU,EAAE,sBAAM;AACjBO,MAAAA,GAAG;AACHD,MAAAA,UAAU;AACV;AARF,KAUEV,IAAI,GAAGA,IAAH,GAAU,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAC;AAAvC,IAVhB,CADD;AAcA,CAjDD;;AAmDA,IAAMwB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,YAAY,EAAE;AACbG,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,MAAM,EAAE,IAFK;AAGbC,IAAAA,MAAM,EAAE,EAHK;AAIbC,IAAAA,KAAK,EAAE,EAJM;AAKbC,IAAAA,eAAe,EAAE,SALJ;AAMbC,IAAAA,KAAK,EAAE,EANM;AAObC,IAAAA,MAAM,EAAE,EAPK;AAQbC,IAAAA,cAAc,EAAE,QARH;AASbC,IAAAA,UAAU,EAAE,QATC;AAUbC,IAAAA,YAAY,EAAE,EAVD;AAWbC,IAAAA,WAAW,EAAE;AAXA;AADkB,CAAlB,CAAf;AAeA,eAAexC,YAAf","sourcesContent":["import React from \"react\";\nimport {\n\tView,\n\tPressable,\n\tStyleSheet,\n\tText,\n\tDimensions,\n\tAnimated,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useDispatch } from \"react-redux\";\nimport { addReminder } from \"../redux/ReminderSlice\";\n\nconst PressableAnimated = Animated.createAnimatedComponent(Pressable);\n\nconst ActionButton = ({ text, icon }) => {\n\tconst dispatch = useDispatch();\n\tconst animatedScale = new Animated.Value(1);\n\n\tconst onTouchStart = () => {\n\t\tAnimated.spring(animatedScale, {\n\t\t\ttoValue: 0.9,\n\t\t\tuseNativeDriver: true,\n\t\t\tspeed: 30,\n\t\t}).start();\n\t};\n\n\tconst onTouchEnd = () => {\n\t\tAnimated.spring(animatedScale, {\n\t\t\ttoValue: 1,\n\t\t\tuseNativeDriver: true,\n\t\t\tspeed: 10,\n\t\t}).start();\n\t};\n\n\tconst add = () => {\n\t\tconsole.log(\"Add reminder\");\n\t\tconst reminder = {\n\t\t\tid: new Date().toJSON(),\n\t\t\ttitle: \"Test\",\n\t\t\tdescription: \"Test\",\n\t\t\tcompleted: false,\n\t\t};\n\t\tdispatch(addReminder(reminder));\n\t};\n\n\tconst animatedScaleStyle = {\n\t\ttransform: [{ scale: animatedScale }],\n\t};\n\n\treturn (\n\t\t<PressableAnimated\n\t\t\tstyle={[styles.actionbutton, animatedScaleStyle]}\n\t\t\tonPressIn={() => {\n\t\t\t\tonTouchStart();\n\t\t\t}}\n\t\t\tonPressOut={() => {\n\t\t\t\tadd();\n\t\t\t\tonTouchEnd();\n\t\t\t}}\n\t\t>\n\t\t\t{icon ? icon : <AntDesign name=\"plus\" size={30} color=\"white\" />}\n\t\t</PressableAnimated>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tactionbutton: {\n\t\tposition: \"absolute\",\n\t\tzIndex: 1000,\n\t\tbottom: 20,\n\t\tright: 20,\n\t\tbackgroundColor: \"#ffc484\",\n\t\twidth: 70,\n\t\theight: 70,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 40,\n\t\tborderWidth: 1,\n\t},\n});\nexport default ActionButton;\n"]},"metadata":{},"sourceType":"module"}