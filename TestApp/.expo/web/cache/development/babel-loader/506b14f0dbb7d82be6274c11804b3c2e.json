{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { editReminder } from \"../redux/ReminderSlice\";\n\nvar ListItem = function ListItem(props) {\n  console.log(\"completed state\", props.item.completed);\n  var dispatch = useDispatch();\n\n  var reminder = _extends({}, props.item);\n\n  var setComplete = function setComplete() {\n    reminder.completed = !props.item.completed;\n    dispatch(editReminder({\n      reminder: reminder,\n      index: props.index\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.outerContainer,\n    onTouchEnd: function onTouchEnd() {\n      setComplete();\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.createElement(View, {\n    style: styles.checkboxHolder\n  }, React.createElement(BouncyCheckbox, {\n    onPress: function onPress() {\n      setComplete();\n    },\n    bounceEffect: 1,\n    size: 30,\n    isChecked: props.item.completed,\n    disableBuiltInState: true,\n    text: props.item.title,\n    textStyle: styles.text,\n    useNativeDriver: true,\n    tou: true\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1,\n    borderRadius: 10,\n    backgroundColor: \"#130039\",\n    height: 100,\n    maxHeight: 90,\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n    marginBottom: 10\n  },\n  innerContainer: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  checkboxHolder: {\n    width: 100,\n    flex: 1,\n    justifyContent: \"center\",\n    paddingLeft: 15\n  },\n  text: {\n    fontSize: 17,\n    color: \"white\"\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["/home/lasan/Dev/React/TestApp/src/components/ListItem.js"],"names":["React","BouncyCheckbox","useDispatch","editReminder","ListItem","props","console","log","item","completed","dispatch","reminder","setComplete","index","styles","outerContainer","innerContainer","checkboxHolder","title","text","StyleSheet","create","flex","borderRadius","backgroundColor","height","maxHeight","flexDirection","marginHorizontal","marginBottom","width","justifyContent","paddingLeft","fontSize","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,IAAN,CAAWC,SAA1C;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,MAAIS,QAAQ,GAAG,SAAc,EAAd,EAAkBN,KAAK,CAACG,IAAxB,CAAf;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AAGzBD,IAAAA,QAAQ,CAACF,SAAT,GAAqB,CAACJ,KAAK,CAACG,IAAN,CAAWC,SAAjC;AACAC,IAAAA,QAAQ,CAACP,YAAY,CAAC;AAAEQ,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,MAAAA,KAAK,EAAER,KAAK,CAACQ;AAAnC,KAAD,CAAb,CAAR;AACA,GALD;;AAOA,SACC,oBAAC,IAAD;AACC,IAAA,KAAK,EAAEC,MAAM,CAACC,cADf;AAEC,IAAA,UAAU,EAAE,sBAAM;AACjBH,MAAAA,WAAW;AACX;AAJF,KAMC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KACC,oBAAC,cAAD;AACC,IAAA,OAAO,EAAE,mBAAM;AACdL,MAAAA,WAAW;AACX,KAHF;AAIC,IAAA,YAAY,EAAE,CAJf;AAKC,IAAA,IAAI,EAAE,EALP;AAMC,IAAA,SAAS,EAAEP,KAAK,CAACG,IAAN,CAAWC,SANvB;AAOC,IAAA,mBAAmB,MAPpB;AAQC,IAAA,IAAI,EAAEJ,KAAK,CAACG,IAAN,CAAWU,KARlB;AASC,IAAA,SAAS,EAAEJ,MAAM,CAACK,IATnB;AAUC,IAAA,eAAe,MAVhB;AAWC,IAAA,GAAG;AAXJ,IADD,CADD,CAND,CADD;AA0BA,CAvCD;;AAwCA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,cAAc,EAAE;AACfO,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,YAAY,EAAE,EAFC;AAGfC,IAAAA,eAAe,EAAE,SAHF;AAIfC,IAAAA,MAAM,EAAE,GAJO;AAKfC,IAAAA,SAAS,EAAE,EALI;AAMfC,IAAAA,aAAa,EAAE,KANA;AAOfC,IAAAA,gBAAgB,EAAE,EAPH;AAQfC,IAAAA,YAAY,EAAE;AARC,GADgB;AAWhCb,EAAAA,cAAc,EAAE;AACfM,IAAAA,IAAI,EAAE,CADS;AAEfK,IAAAA,aAAa,EAAE;AAFA,GAXgB;AAgBhCV,EAAAA,cAAc,EAAE;AACfa,IAAAA,KAAK,EAAE,GADQ;AAEfR,IAAAA,IAAI,EAAE,CAFS;AAGfS,IAAAA,cAAc,EAAE,QAHD;AAIfC,IAAAA,WAAW,EAAE;AAJE,GAhBgB;AAsBhCb,EAAAA,IAAI,EAAE;AACLc,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE;AAFF;AAtB0B,CAAlB,CAAf;AA4BA,eAAe9B,QAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, Button, StyleSheet } from \"react-native\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { editReminder } from \"../redux/ReminderSlice\";\n\nconst ListItem = (props) => {\n\tconsole.log(\"completed state\", props.item.completed);\n\tconst dispatch = useDispatch();\n\n\tlet reminder = Object.assign({}, props.item);\n\n\tconst setComplete = () => {\n\t\t// console.log(\"before setting checked \", checked);\n\t\t// console.log(\"after setting checked \", checked);\n\t\treminder.completed = !props.item.completed;\n\t\tdispatch(editReminder({ reminder: reminder, index: props.index }));\n\t};\n\n\treturn (\n\t\t<View\n\t\t\tstyle={styles.outerContainer}\n\t\t\tonTouchEnd={() => {\n\t\t\t\tsetComplete();\n\t\t\t}}\n\t\t>\n\t\t\t<View style={styles.innerContainer}>\n\t\t\t\t<View style={styles.checkboxHolder}>\n\t\t\t\t\t<BouncyCheckbox\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetComplete();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbounceEffect={1}\n\t\t\t\t\t\tsize={30}\n\t\t\t\t\t\tisChecked={props.item.completed}\n\t\t\t\t\t\tdisableBuiltInState\n\t\t\t\t\t\ttext={props.item.title}\n\t\t\t\t\t\ttextStyle={styles.text}\n\t\t\t\t\t\tuseNativeDriver\n\t\t\t\t\t\ttou\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\nconst styles = StyleSheet.create({\n\touterContainer: {\n\t\tflex: 1,\n\t\tborderRadius: 10,\n\t\tbackgroundColor: \"#130039\",\n\t\theight: 100,\n\t\tmaxHeight: 90,\n\t\tflexDirection: \"row\",\n\t\tmarginHorizontal: 10,\n\t\tmarginBottom: 10,\n\t},\n\tinnerContainer: {\n\t\tflex: 1,\n\t\tflexDirection: \"row\",\n\t\t// padding: 15,\n\t},\n\tcheckboxHolder: {\n\t\twidth: 100,\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\tpaddingLeft: 15,\n\t},\n\ttext: {\n\t\tfontSize: 17,\n\t\tcolor: \"white\",\n\t},\n});\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}