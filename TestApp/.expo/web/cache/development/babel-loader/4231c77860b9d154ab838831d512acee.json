{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport var RemiderSlice = createSlice({\n  name: \"reminders\",\n  initialState: {\n    reminders: []\n  },\n  reducers: {\n    addReminder: function addReminder(state, action) {\n      state.reminders.push(action.payload);\n    },\n    editReminder: function editReminder(state, action) {\n      state.reminders[action.payload.index] = action.payload.reminder;\n    }\n  }\n});\nvar addReminder = RemiderSlice.actions.addReminder;\nexport { addReminder };\nvar editReminder = RemiderSlice.actions.editReminder;\nexport { editReminder };\nexport default RemiderSlice.reducer;","map":{"version":3,"sources":["/home/lasan/Dev/React/TestApp/src/redux/ReminderSlice.js"],"names":["createSlice","RemiderSlice","name","initialState","reminders","reducers","addReminder","state","action","push","payload","editReminder","index","reminder","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,YAAY,GAAGD,WAAW,CAAC;AACvCE,EAAAA,IAAI,EAAE,WADiC;AAEvCC,EAAAA,YAAY,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GAFyB;AAKvCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/BD,MAAAA,KAAK,CAACH,SAAN,CAAgBK,IAAhB,CAAqBD,MAAM,CAACE,OAA5B;AACA,KAHQ;AAITC,IAAAA,YAAY,EAAE,sBAACJ,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,CAACH,SAAN,CAAgBI,MAAM,CAACE,OAAP,CAAeE,KAA/B,IAAwCJ,MAAM,CAACE,OAAP,CAAeG,QAAvD;AACA;AANQ;AAL6B,CAAD,CAAhC;AAeA,IAAQP,WAAR,GAAwBL,YAAY,CAACa,OAArC,CAAQR,WAAR;;AACA,IAAQK,YAAR,GAAyBV,YAAY,CAACa,OAAtC,CAAQH,YAAR;;AACP,eAAeV,YAAY,CAACc,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const RemiderSlice = createSlice({\n\tname: \"reminders\",\n\tinitialState: {\n\t\treminders: [],\n\t},\n\treducers: {\n\t\taddReminder: (state, action) => {\n\t\t\tstate.reminders.push(action.payload);\n\t\t},\n\t\teditReminder: (state, action) => {\n\t\t\tstate.reminders[action.payload.index] = action.payload.reminder;\n\t\t},\n\t},\n});\n\nexport const { addReminder } = RemiderSlice.actions;\nexport const { editReminder } = RemiderSlice.actions;\nexport default RemiderSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}